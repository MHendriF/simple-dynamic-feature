/*
 * Copyright 2018 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {

    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 2
        versionName "1.1"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias 'mhendrif.dynamicfeatures'
            keyPassword 'mhendrif.dynamicfeatures'
            storeFile file('C:/Users/Aryapk/keystores/mhendrif.dynamicfeatures.jks')
            storePassword 'mhendrif.dynamicfeatures12345'
        }
    }

    buildTypes {
        debug {}
        release {
            minifyEnabled true
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    dynamicFeatures = [':features:kotlin',
                       ':features:initialInstall',
                       ':features:java',
                       ':features:native',
                       ':features:maxSdk',
                       ':features:assets',
                       ':instant:split',
                       ':instant:url'
    ]
    ndkVersion '21.0.6113669'
}

dependencies {

    // Libraries which can be re-used in other modules should use the `api` keyword.
    // This way they can be shared with dependent feature modules.

    implementation 'androidx.annotation:annotation:1.1.0'

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    api "androidx.appcompat:appcompat:${versions.appcompat}"
    api 'androidx.constraintlayout:constraintlayout:2.0.0'
    api 'com.google.android.material:material:1.0.0'
    api "com.google.android.play:core:${versions.playcore}"

    androidTestImplementation "androidx.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestImplementation "androidx.test:rules:${versions.testRules}"
    androidTestImplementation "androidx.test:runner:${versions.testRunner}"
    androidTestImplementation "androidx.test.ext:junit:${versions.extJunit}"

    // When using API in base, some dependencies might have to be re-added for test implementation.
    androidTestImplementation "androidx.appcompat:appcompat:${versions.appcompat}"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.0.1')

    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
}
